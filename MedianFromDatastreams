import heapq
class MedianFinder(object):

    def __init__(self):
        """
        initialize your data structure here.
        """
        self.lo=[]
        self.hi=[]
        

    def addNum(self, num):
        """
        :type num: int
        :rtype: None
        """
        if len(self.lo)==0:
            heapq.heappush(self.lo,-num)
            return
        
        if num <= -self.lo[0]:
            heapq.heappush(self.lo,-num)
        else:
            heapq.heappush(self.hi,num)
        
        if len(self.lo) > len(self.hi) + 1:
            heapq.heappush(self.hi,-heapq.heappop(self.lo))
        elif len(self.hi) > len(self.lo):
            heapq.heappush(self.lo,-heapq.heappop(self.hi))
        

    def findMedian(self):
        """
        :rtype: float
        """
        if len(self.lo)==len(self.hi):
            return float(self.hi[0] - self.lo[0])/2.0
        else:
            return -self.lo[0]
        


# Your MedianFinder object will be instantiated and called as such:
# obj = MedianFinder()
# obj.addNum(num)
# param_2 = obj.findMedian()
